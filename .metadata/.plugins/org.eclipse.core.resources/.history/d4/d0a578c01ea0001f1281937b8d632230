// scheduler.h
#include "global.h"
#include <stdlib.h>
#include "main.h"
typedef struct {
    void (*pFunction)();
    uint32_t ExecuteTime;  // Absolute time
    uint32_t Period;       // Period in ticks
    uint8_t RunMe;
} SCH_Task;

typedef struct SCH_TaskNode {
    sTasks task;                    // Thông tin của tác vụ
    struct SCH_TaskNode* next;      // Con trỏ trỏ đến node tiếp theo
} SCH_TaskNode;

typedef struct {
    SCH_TaskNode* head;             // Đầu của danh sách liên kết
} SCH_TaskList;

// Khởi tạo danh sách
extern SCH_TaskList taskList;

void send_time();
// Các hàm để thêm, xóa, và xử lý tác vụ trong linked list
void SCH_Add_Task(void (*pFunction)(), const uint32_t DELAY, const uint32_t PERIOD);
void SCH_Delete_Task(int id);
void SCH_Delete_First_Task();
void SCH_Dispatch_Tasks(void);
void SCH_Update(void);
void SCH_Add_Oneshort_tasks(void (*pFunction)(),int32_t DELAY);
void SCH_Delete_First_Task(void) ;
